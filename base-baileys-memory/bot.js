const { createBot, createProvider, createFlow, addKeyword } = require('@bot-whatsapp/bot');
const QRPortalWeb = require('@bot-whatsapp/portal');
const BaileysProvider = require('@bot-whatsapp/provider/baileys');
const MockAdapter = require('@bot-whatsapp/database/mock');

// Flujo principal de bienvenida y recolecci√≥n de datos
const flowPrincipal = addKeyword(['hola', 'start', 'bienvenido'])
    .addAnswer('üëãüèª ¬°Bienvenido a Villanueva Padel! üéæ\n(San Isidro Labrador)')
    .addAnswer('üëâüèª Por favor, ingresa tu *Nombre* y *N√∫mero de Lote* en el siguiente formato: *Juan P√©rez Lote 123* ', null, null, [
        // Flujo para cuando el usuario responde con su nombre y lote
        addKeyword([''])
            .addAnswer('ü•≥ Ahora Ingresa en qu√© cancha vas a jugar Responde con *1*, *2* o *3*.', null, null, [
                // Variables de control para los intentos fallidos
                addKeyword(['1', '2', '3'])
                    .addAnswer('‚ö†Ô∏è ¬øTenes invitados sin carnet para declarar? üë•üë• \n Responde *SI* o *NO*', null, null, [
                        // Si la respuesta es "no", el bot pasa directamente a la siguiente etapa sin invitados
                        addKeyword(['no', 'n'])
                            .addAnswer('¬°Entendido! No tienes invitados para declarar. Ahora puedes comenzar a jugar. ¬°Divi√©rtete!'),

                        // Si la respuesta es "s√≠", el bot pregunta la cantidad de invitados
                        addKeyword(['si','s'])
                            .addAnswer('‚û°Ô∏è ¬øCu√°ntos invitados sin Carnet tenes ‚ùì‚ùì‚ùì \n Responde con *1*, *2* o *3* ', null, null, [
                                // Espera la respuesta de la cantidad de invitados (1, 2 o 3)
                                addKeyword(['1'])
                                    .addAnswer('üôãüèº  Ingresa el nombre y n√∫mero de lote del primer invitado (ejemplo: Juan P√©rez Lote 123).‚úÖ', null, null, [
                                        addKeyword(['']) // Acepta cualquier respuesta, luego avanza
                                            .addAnswer('¬°Gracias! Ahora puedes comenzar a jugar. ¬°Divi√©rtete!') // Si solo hay un invitado, termina
                                    ]),

                                addKeyword(['2'])
                                    .addAnswer('Ingresa el nombre y n√∫mero de lote del primer invitado (ejemplo: Juan P√©rez Lote 123 o Jos√© 123).', null, null, [
                                        addKeyword(['']) // Acepta cualquier respuesta del primer invitado
                                            .addAnswer('üôçüèº‚Äç‚ôÇÔ∏èüôçüèº‚Äç‚ôÇÔ∏è Ahora ingresa los datos del invitado Nro 2Ô∏è‚É£ del mismo modo que el anterior!!.', null, null, [
                                                addKeyword(['']) // Acepta cualquier respuesta del segundo invitado
                                                    .addAnswer('¬°Gracias! Ahora puedes comenzar a jugar. ¬°Divi√©rtete!') // Termina despu√©s de dos invitados
                                            ])
                                    ]),

                                addKeyword(['3'])
                                    .addAnswer('Ingresa el nombre y n√∫mero de lote del primer invitado (ejemplo: Juan P√©rez Lote 123 o Jos√© 123).', null, null, [
                                        addKeyword(['']) // Acepta cualquier respuesta del primer invitado
                                            .addAnswer('üôçüèº‚Äç‚ôÇÔ∏èüôçüèº‚Äç‚ôÇÔ∏è Ahora ingresa los datos del invitado Nro 2Ô∏è‚É£ del mismo modo que el anterior!!.', null, null, [
                                                addKeyword(['']) // Acepta cualquier respuesta del segundo invitado
                                                    .addAnswer('ü§óü§óü§ó   Por √∫ltimo, ingres√° los datos del invitado Nro 3Ô∏è‚É£ ‚ùó', null, null, [
                                                        addKeyword(['']) // Acepta cualquier respuesta del tercer invitado
                                                            .addAnswer('üéæüéæüéæüéæüéæüéæüéæüéæüéæüéæüéæüéæ \n Gracias por la info!!! ‚ù§Ô∏è Todo listo! Ahora pod√©s comenzar a jugar‚ÄºÔ∏è. \n * ü§î Record√°, si todav√≠a no pasaste, que si quer√©s abonar en efectivo podes acercarte a la oficina y hacerlo. De lo contrario te lo podemos cargar por expensas! üì© \n * Este sistema NO REEMPLAZA a la reserva por PADELINK, si no la hiciste, hacela asi nadie te pide la cancha üò° mientras estes jugando üèì. \n Gracias por elegirnos üòçüòç!! Disfruten el partido!!! \n üéæüéæüéæüéæüéæüéæüéæüéæüéæüéæüéæüéæ') // Termina despu√©s de tres invitados
                                                    ])
                                            ])
                                    ])
                            ])
                    ]),

                // Si la respuesta no es v√°lida (no es 1, 2 ni 3), repite la pregunta
                addKeyword([''])
                    .addAnswer('Por favor, responde con *1*, *2* o *3* para elegir la cancha.', null, null, [
                        // Si la respuesta sigue siendo incorrecta, repite la pregunta
                        addKeyword([''])
                            .addAnswer('Por favor, responde con *1*, *2* o *3* para elegir la cancha. Si no puedes decidir, escribe uno de esos n√∫meros.', null, null, [
                                // Repetir el mismo proceso hasta 3 intentos
                                addKeyword(['1', '2', '3'])
                                    .addAnswer('Perfecto. Ahora, ¬øTienes invitados sin carnet para declarar? Responde *SI* o *NO*', null, null, [
                                        // Si la respuesta es "no", el bot pasa directamente a la siguiente etapa sin invitados
                                        addKeyword(['no'])
                                            .addAnswer('¬°Entendido! No tienes invitados para declarar. Ahora puedes comenzar a jugar. ¬°Divi√©rtete!'),

                                        // Si la respuesta es "s√≠", el bot pregunta la cantidad de invitados
                                        addKeyword(['si'])
                                            .addAnswer('¬°Perfecto! ¬øCu√°ntos invitados tienes? Responde con *1*, *2* o *3* (sin importar el formato de la respuesta).', null, null, [
                                                // Espera la respuesta de la cantidad de invitados (1, 2 o 3)
                                                addKeyword(['1'])
                                                    .addAnswer('Ingresa el nombre y n√∫mero de lote del primer invitado (ejemplo: Juan P√©rez Lote 123 o Jos√© 123).', null, null, [
                                                        addKeyword(['']) // Acepta cualquier respuesta, luego avanza
                                                            .addAnswer('¬°Gracias! Ahora puedes comenzar a jugar. ¬°Divi√©rtete!') // Si solo hay un invitado, termina
                                                    ]),

                                                addKeyword(['2'])
                                                    .addAnswer('Ingresa el nombre y n√∫mero de lote del primer invitado (ejemplo: Juan P√©rez Lote 123 o Jos√© 123).', null, null, [
                                                        addKeyword(['']) // Acepta cualquier respuesta del primer invitado
                                                            .addAnswer('Gracias por el primer invitado. Ahora ingresa los datos del segundo invitado (ejemplo: Mar√≠a Garc√≠a Lote 456).', null, null, [
                                                                addKeyword(['']) // Acepta cualquier respuesta del segundo invitado
                                                                    .addAnswer('¬°Gracias! Ahora puedes comenzar a jugar. ¬°Divi√©rtete!') // Termina despu√©s de dos invitados
                                                            ])
                                                    ]),

                                                addKeyword(['3'])
                                                    .addAnswer('Ingresa el nombre y n√∫mero de lote del primer invitado (ejemplo: Juan P√©rez Lote 123 o Jos√© 123).', null, null, [
                                                        addKeyword(['']) // Acepta cualquier respuesta del primer invitado
                                                            .addAnswer('Gracias por el primer invitado. Ahora ingresa los datos del segundo invitado (ejemplo: Mar√≠a Garc√≠a Lote 456).', null, null, [
                                                                addKeyword(['']) // Acepta cualquier respuesta del segundo invitado
                                                                    .addAnswer('Gracias por el segundo invitado. Ahora ingresa los datos del tercer invitado (ejemplo: Pedro G√≥mez Lote 789).', null, null, [
                                                                        addKeyword(['']) // Acepta cualquier respuesta del tercer invitado
                                                                            .addAnswer('¬°Todo listo! Ahora puedes comenzar a jugar. ¬°Divi√©rtete!') // Termina despu√©s de tres invitados
                                                                    ])
                                                            ])
                                                    ])
                                            ])
                                    ])
                            ])
                    ])
            ])
    ]);

// Configuraci√≥n del flujo de todo el bot
const adapterDB = new MockAdapter();
const adapterFlow = createFlow([flowPrincipal]);

const adapterProvider = createProvider(BaileysProvider);

const main = async () => {
    // Crear el bot con la configuraci√≥n del flujo, proveedor y base de datos
    createBot({
        flow: adapterFlow,
        provider: adapterProvider,
        database: adapterDB,
    });

    // Generar el portal QR para autenticar la sesi√≥n
    QRPortalWeb();
};

main();
